"use strict";angular.module("regCartApp",["configuration","ngCookies","ngResource","ngSanitize","ui.router","ui.bootstrap"]).config(["$stateProvider","$urlRouterProvider","$httpProvider",function(a,b,c){b.otherwise("/myCart"),a.state("root",{templateUrl:"partials/main.html",controller:"MainCtrl"}).state("root.cart",{url:"/myCart",templateUrl:"partials/cart.html",controller:"CartCtrl"}).state("root.schedule",{url:"/mySchedule",templateUrl:"partials/schedule.html",controller:"ScheduleCtrl"}).state("root.additionalOptions",{url:"/options",templateUrl:"partials/additionalOptions.html"}).state("root.dropCourse",{url:"/options",templateUrl:"partials/dropCourse.html"}),c.interceptors.push("loginInterceptor")}]),angular.module("configuration",[]).value("APP_URL","ks-with-rice-embedded-dev/services/"),angular.module("regCartApp").controller("MainCtrl",["$scope","TermsService","ScheduleService","APP_URL",function(a,b,c,d){console.log("In Main Controller"),a.appUrl=d.replace("/services/","/"),a.terms=b.getTermsFromServer().query(function(){}),a.termId="kuali.atp.2012Spring",b.setTermId(a.termId),c.populateSchedule(b.getTermId()),a.schedules=c.getStudentSchedule(),a.registeredCredits=c.getRegisteredCredits,a.registeredCourseCount=c.getRegisteredCourseCount}]),angular.module("regCartApp").controller("CartCtrl",["$scope","$modal","CartService",function(a,b,c){function d(d,e,f,g,h,i,j){c.addCourseToCart().query({cartId:d,courseCode:e,termId:f,regGroupCode:g,regGroupId:h,gradingOptionId:i,credits:j},function(b){console.log("response: "+JSON.stringify(b)),console.log("Searched for course: "+a.courseCode+" Term: "+a.termId),console.log("Added item:"),a.userMessage={txt:"Course Added Successfully",type:"success"},a.courseCode="",a.regCode="",a.cart.items.unshift(b)},function(c){console.log("CartId:",d),404===c.status?a.userMessage={txt:c.data,type:"error"}:400===c.status?(console.log("CartId:",d),b.open({backdrop:"static",templateUrl:"partials/additionalOptions.html",resolve:{item:function(){return c.data},cartId:function(){return d}},controller:["$rootScope","$scope","item","cartId",function(a,b,c,d){console.log("in controller"),console.log(b),console.log(c),b.newCartItem=c,b.newCartItem.credits=b.newCartItem.creditOptions[0],b.newCartItem.grading="kuali.resultComponent.grade.letter",b.dismiss=function(){console.log("dismiss"),b.$close(!0)},b.save=function(){console.log("save",d),a.$broadcast("addCourseToCart",d,b.newCartItem.courseCode,b.newCartItem.termId,b.newCartItem.regGroupCode,b.newCartItem.regGroupId,b.newCartItem.grading,b.newCartItem.credits),b.$close(!0)}}]})):(console.log("Error with adding course",c),a.userMessage={txt:"There was an error processing your request",type:"error"})})}function e(){if(!a.cart)return 0;for(var b=0,c=0;c<a.cart.items.length;c++)b+=Number(a.cart.items[c].credits);return b}console.log("CartController!"),console.log(a.termId),a.oneAtATime=!1,a.$watch("termId",function(b){console.log("term id has changed"),b&&c.getCart().query({termId:b},function(b){a.cart=b})}),a.add=function(){a.courseCode=a.courseCode.toUpperCase(),d(a.cart.cartId,a.courseCode,a.termId,a.regCode,null,null,null,null)},a.$on("addCourseToCart",function(a,b,c,e,f,g,h,i){console.log("receiveing event addCourseToCart",a),d(b,c,e,f,g,h,i)}),a.cancelNew=function(){a.newCcartItem=null,a.showNew=!1},a.delete=function(b){var d,e=a.cart.items[b],f=e.actionLinks;angular.forEach(f,function(a){"removeItemFromCart"===a.action&&(d=a.uri)}),c.removeItemFromCart(d).query({},function(c){a.cart.items.splice(b,1);var d;angular.forEach(c.actionLinks,function(a){"addCourseToCart"===a.action&&(d=a.uri)}),a.userMessage={txt:e.courseCode+"("+e.regGroupCode+") has been successfully removed from your cart.   ",actionLink:d,linkText:"Undo",type:"success"},a.userActionSuccessful=!0})},a.invokeActionLink=function(b){a.userActionSuccessful=!1,c.invokeActionLink(b).query({},function(b){a.cart.items.unshift(b),a.userMessage.txt=""})},a.editItem=function(b){a.newCredits=b.credits,a.newGrading=b.grading,b.editing=!0},a.cancelEditItem=function(a){a.editing=!1},a.updateCartItem=function(b,d,e){console.log("Updating:"),console.log(e),c.updateCartItem().query({cartId:a.cart.cartId,cartItemId:b.cartItemId,credits:d,grading:e},function(c){console.log(a),b.credits=c.credits,b.grading=c.grading,b.editing=!1,b.actionLinks=c.actionLinks,a.userMessage={txt:"Updated Successfully",type:"success"}})},a.register=function(){c.submitCart().query({cartId:a.cart.cartId},function(){console.log("Submiting cart."),c.getCart().query({termId:a.termId},function(b){a.cart=b,a.userMessage={txt:"Cart was submitted.",type:"success"}})})},a.$watchCollection("cart.items",function(){a.creditTotal=e()})}]);var cartServiceModule=angular.module("regCartApp");cartServiceModule.controller("ScheduleCtrl",["$scope","$modal","ScheduleService",function(a,b,c){c.populateSchedule(a.termId),a.schedules=c.getStudentSchedule(),a.registeredCredits=c.getRegisteredCredits,a.registeredCourseCount=c.getRegisteredCourseCount,a.openDropConfirmation=function(b,c){console.log("Open drop confirmation"),c.dropping=!0,a.index=b,a.course=c},a.cancelDropConfirmation=function(a){a.dropping=!1},a.dropRegistrationGroup=function(b,d){console.log("Open drop confirmation"),c.dropRegistrationGroup().query({userId:"admin",masterLprId:d.masterLprId},function(){d.dropping=!1,a.schedules[0].courseOfferings.splice(b,1),c.setRegisteredCredits(parseFloat(c.getRegisteredCredits())-parseFloat(d.credits)),a.userMessage={txt:d.courseCode+" dropped Successfully",type:"success"}})},a.editScheduleItem=function(b){a.newCredits=b.credits,a.newGrading=b.gradingOptionId,b.editing=!0},a.cancelEditScheduleItem=function(a){a.editing=!1},a.updateScheduleItem=function(b,d,e){console.log("Updating:"),console.log(d),console.log(e),c.updateScheduleItem().query({userId:"admin",courseCode:b.courseCode,cartItemId:b.regGroupCode,masterLprId:b.masterLprId,credits:d,gradingOptionId:e},function(c){console.log(c),b.credits=c.credits,b.gradingOptionId=c.gradingOptionId,b.editing=!1,a.userMessage={txt:"Updated Successfully",type:"success"}})}}]),angular.module("regCartApp").service("CartService",["$resource","APP_URL",function(a,b){this.getCart=function(){return a(b+"CourseRegistrationCartClientService/searchForCart",{},{query:{method:"GET",cache:!1,isArray:!1}})},this.getGradingOptions=function(){return a(b+"CourseRegistrationCartClientService/getStudentRegistrationOptions",{},{query:{method:"GET",cache:!1,isArray:!1}})},this.addCourseToCart=function(){return a(b+"CourseRegistrationCartClientService/addCourseToCart",{},{query:{method:"GET",cache:!1,isArray:!1}})},this.removeItemFromCart=function(c){return a(b+c,{},{query:{method:"GET",cache:!1,isArray:!1}})},this.invokeActionLink=function(c){return a(b+c,{},{query:{method:"GET",cache:!1,isArray:!1}})},this.updateCartItem=function(){return a(b+"CourseRegistrationCartClientService/updateCartItem",{},{query:{method:"GET",cache:!1,isArray:!1}})},this.submitCart=function(){return a(b+"CourseRegistrationCartClientService/submitCart",{},{query:{method:"GET",cache:!1,isArray:!1}})}}]),angular.module("regCartApp").service("TermsService",["$resource","APP_URL",function(a,b){var c="kuali.atp.2012Spring";this.getTermId=function(){return c},this.setTermId=function(a){c=a},this.getTermsFromServer=function(){return a(b+"ScheduleOfClassesService/terms",{},{query:{method:"GET",cache:!0,isArray:!0}})}}]),angular.module("regCartApp").service("ScheduleService",["$resource","APP_URL",function(a,b){var c,d=0,e=0;this.getRegisteredCredits=function(){return d},this.setRegisteredCredits=function(a){d=a},this.getRegisteredCourseCount=function(){return e},this.setRegisteredCourseCount=function(a){e=a},this.getStudentSchedule=function(){return c},this.setStudentSchedule=function(a){c=a},this.getScheduleFromServer=function(){return a(b+"CourseRegistrationClientService/personschedule",{},{query:{method:"GET",cache:!1,isArray:!0}})},this.updateSchedule=function(){return a(b+"CourseRegistrationClientService/updateScheduleItem",{},{query:{method:"GET",cache:!1,isArray:!0}})},this.updateScheduleItem=function(){return a(b+"CourseRegistrationClientService/updateScheduleItem",{},{query:{method:"GET",cache:!1,isArray:!1}})},this.dropRegistrationGroup=function(){return a(b+"CourseRegistrationClientService/dropRegistrationGroup",{},{query:{method:"GET",cache:!1,isArray:!1}})},this.populateSchedule=function(a){this.setStudentSchedule(this.getScheduleFromServer().query({termId:a},function(a){console.log("called rest service to get schedule data");var b=0,c=0;angular.forEach(a,function(a){angular.forEach(a.courseOfferings,function(a){b+=parseFloat(a.credits),c++})}),d=b,e=c}))}}]),angular.module("regCartApp").service("LoginService",["$resource","APP_URL",function(a,b){this.logOnAsAdmin=function(){return a(b+"DevelopmentLoginClientService/login",{},{query:{method:"GET",cache:!1,isArray:!1}})}}]),angular.module("regCartApp").factory("loginInterceptor",["$q","$injector",function(a,b){return{responseError:function(c){if(0===c.status){console.log("Failed to execute request - trying to login");var d=b.get("LoginService");d.logOnAsAdmin().query({userId:"admin",password:"admin"},function(){console.log("Logged in, reloading page."),$window.location.reload()},function(){console.log("Not Logged in, reloading page."),$window.location.reload()})}return a.reject(c)}}}]);